// Generated by CoffeeScript 1.7.1
var Cursor,
  __slice = [].slice;

Cursor = (function() {
  function Cursor(formula) {
    this.formula = formula;
    this.position = this.formula;
    this.displayPosition = 'basic';
  }

  Cursor.prototype.getHigher = function() {
    if (this.position.parent) {
      this.position = this.position.parent;
    }
    return !!this.position.parent;
  };

  Cursor.prototype["new"] = function(el) {
    return this.position["new"](el);
  };

  Cursor.prototype.newAtStart = function(el) {
    return this.position.newAtStart(el);
  };

  Cursor.prototype.newFormula = function() {
    this.formula = new Formula();
    this.position = this.formula;
    return this.displayPosition = 'block';
  };

  Cursor.prototype.newBlock = function(block) {
    this["new"](block);
    block.getFormula().setParent(this.formula);
    return this.position = block.getFormula();
  };

  Cursor.prototype.display = function() {
    return this.formula.display();
  };

  Cursor.prototype.solve = function() {
    return this.formula.solve();
  };

  Cursor.prototype.formulaInBlock = function() {
    var beginning, block, x, _i, _len;
    block = arguments[0], beginning = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    block.setFormula(this.formula);
    this.newFormula();
    block.getFormula().setParent(this.formula);
    for (_i = 0, _len = beginning.length; _i < _len; _i++) {
      x = beginning[_i];
      this["new"](x);
    }
    this["new"](block);
    return this.position = block.getFormula();
  };

  return Cursor;

})();
