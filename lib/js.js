// Generated by CoffeeScript 1.7.1
var cursor, tap, upActivated;

window.HTML = {
  'MINUS': '-',
  'PLUS': '+',
  'AND': 'AND',
  'XOR': 'XOR',
  'OR': 'OR',
  'TIMES': '&times;',
  'DIVIDE': '/',
  'MOD': '%',
  'POW': '&circ;'
};

window.HTML_FUNCTIONS = {
  'SIN': 'sin',
  'COS': 'cos',
  'TAN': 'tan'
};

$(window).resize(function() {
  var size, size_text;
  size = parseInt($(window).width()) - 4;
  size_text = parseInt($(window).height()) / 15 + 'px';
  $('body').css({
    'font-size': size_text,
    'line-height': size_text
  });
  $('#cont_disp').css({
    width: size + 'px'
  });
  return $('table tr td').css({
    width: parseInt(size / 7)
  });
});

window.up = $('#UP_BTN');

upActivated = function(act) {
  if (act) {
    return window.up.removeClass('deactivated');
  } else {
    return window.up.addClass('deactivated');
  }
};

$(window).trigger('resize');

window.resultShown = false;

window.form = $('#formula');

window.formula = new Formula();

cursor = new Cursor(window.formula);

window.form.html(window.formula.display());

tap = function(obj) {
  var res, type, x, _i, _len, _ref, _ref1;
  type = $(obj.currentTarget).data('tap');
  console.log(type);
  if (window.HTML.hasOwnProperty(type)) {
    cursor["new"](new Operand(cursor.displayPosition, type));
    window.resultShown = false;
  } else if (window.HTML_FUNCTIONS.hasOwnProperty(type)) {
    if (window.resultShown) {
      cursor.formulaInBlock(new Brackets(cursor.displayPosition), new Function(cursor.displayPosition, type));
      window.resultShown = false;
    } else {
      cursor["new"](new Function(cursor.displayPosition, type));
    }
  } else if ((0 <= (_ref = parseInt(type)) && _ref <= 9) || type === 'FLOATPOINT') {
    if (window.resultShown) {
      cursor.newFormula();
      window.resultShown = false;
    }
    cursor["new"](new NumberObj(cursor.displayPosition, type));
  } else {
    switch (type) {
      case 'INVNUM':
        cursor.formulaInBlock(new Brackets(cursor.displayPosition), new NumberObj(cursor.displayPosition, '1'), new Operand(cursor.displayPosition, 'DIVIDE'));
        window.resultShown = false;
        break;
      case 'BRACKETS':
        upActivated(true);
        if (window.resultShown) {
          cursor.formulaInBlock(new Brackets(cursor.displayPosition));
          window.resultShown = false;
        } else {
          cursor.newBlock(new Brackets(cursor.displayPosition, new Formula()));
        }
        break;
      case 'SOLVE':
        res = cursor.solve();
        cursor.newFormula();
        _ref1 = String(res);
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          x = _ref1[_i];
          if (x === '-') {
            cursor["new"](new Operand(cursor.displayPosition, 'MINUS'));
          } else {
            if (x === '.') {
              x = 'FLOATPOINT';
            }
            cursor["new"](new NumberObj(cursor.displayPosition, x));
          }
        }
        window.resultShown = true;
        break;
      case 'UP':
        upActivated(cursor.getHigher());
    }
  }
  return window.form.html(cursor.display());
};

console.log('connect');

$('td').hammer({}).bind('tap', tap);
